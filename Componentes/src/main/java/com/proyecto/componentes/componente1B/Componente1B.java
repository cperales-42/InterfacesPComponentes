/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.proyecto.componentes.componente1B;

import com.proyecto.componentes.componente1B.Componente1BObject;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.Serializable;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTextField;
import com.proyecto.componentes.componente1B.Componente1BListener;

/**
 *
 * @author Meu
 */
public class Componente1B extends javax.swing.JPanel implements Serializable {

    /**
     * Creates new form Componente1A
     */
    protected String data;
    private String jLabelText;
    private boolean isMandatory;
    private boolean isUp;

    ArrayList<Componente1BListener> listenersList = new ArrayList();

    public Componente1B() {
        initComponents();
        jLabelText = jLabel1.getText();
    }

    public String getData() {
        return data;
    }

    public void setData(String data) {
        this.data = data;
    }

    public String getjLabelText() {
        return jLabelText;
    }

    public void setjLabelText(String jLabelText) {
        this.jLabelText = jLabelText;
        jLabel1.setText(jLabelText);
    }

    public boolean isIsMandatory() {
        return isMandatory;
    }

    public void setIsMandatory(boolean isMandatory) {
        this.isMandatory = isMandatory;
        if (isMandatory) {
            jLabel1.setFont(new Font("Courier", Font.BOLD, 12));
        } else {
            jLabel1.setFont(new Font("Courier", Font.PLAIN, 12));
        }
    }

    public void actualizarLayout() {
        if (isUp) {
            setLayout(new GridLayout(2, 1)); // Dos filas, una columna (columna)
        } else {
            setLayout(new GridLayout(1, 2)); // Una fila, dos columnas (fila)
        }
    }

    public void inicializar() {
        // Crear el JTextField (si no est√° creado de otra forma)
        jTextField1 = new JTextField();

        // Agregar ActionListener para cuando se presiona Enter
        jTextField1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                data = jTextField1.getText();  // Actualiza la propiedad con el texto
            }
        });

        // Agregar FocusListener para cuando el JTextField pierde el foco
        jTextField1.addFocusListener(new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent e) {
                data = jTextField1.getText();  // Actualiza la propiedad cuando pierde el foco
            }
        });
    }

    public boolean getIsUp() {
        return isUp;
    }

    public void setIsUp(boolean isUp) {
        this.isUp = isUp;
        actualizarLayout();
        revalidate();
        repaint();
    }

    public ArrayList<Componente1BListener> getListenersList() {
        return listenersList;
    }

    public void setListenersList(ArrayList<Componente1BListener> listenersList) {
        this.listenersList = listenersList;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JTextField getjTextField1() {
        return jTextField1;
    }

    public void setjTextField1(JTextField jTextField1) {
        this.jTextField1 = jTextField1;
    }
    
    public void setjTextField1Text(String text){
        jTextField1.setText(text);
    }
    
    public String getjTextField1Text(){
        return jTextField1.getText();
    }
    public void addEnterListener(Componente1BListener li) {
        listenersList.add(li);
    }

    public void removeEnterListener(Componente1BListener li) {
        listenersList.remove(li);
    }

    public void fireEnterListener(Componente1BObject evo) {
        for (Componente1BListener lis : listenersList) {
            lis.enterPress(evo);
        }
    }

    public void passToString() {
        jLabelText = jLabel1.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setText("etiqueta:");
        add(jLabel1);

        jTextField1.setText("jTextField1");
        add(jTextField1);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
